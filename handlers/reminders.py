from datetime import datetime, timedelta
from aiogram import Bot, Router, F
from aiogram.filters import Command
from aiogram.types import Message
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from lexicon.lexicon import LEXICON
from database.birthday_db import birthdays, is_reminders_enabled, calculate_age, disable_reminders, enable_reminders

scheduler = None
router = Router()


def is_birthday_soon(birth_date: str, days: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –Ω–∞—Å—Ç—É–ø–∏—Ç –ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –≤ —Ç–µ—á–µ–Ω–∏–µ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –¥–Ω–µ–π"""
    try:
        day, month, year = map(int, birth_date.split('.'))
        today = datetime.now()
        next_date = datetime(today.year, month, day)

        # –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –ø—Ä–æ—à–µ–ª –≤ —ç—Ç–æ–º –≥–æ–¥—É, —Å–º–æ—Ç—Ä–∏–º –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –≥–æ–¥
        if next_date < today:
            next_date = datetime(today.year + 1, month, day)

        return (next_date - today).days <= days
    except (ValueError, IndexError):
        return False


async def send_reminders(bot: Bot):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    for user_id, friends in birthdays.items():
        if is_reminders_enabled(user_id):
            for name, date in friends.items():
                if is_birthday_soon(date, days=3):
                    age = calculate_age(date)
                    await bot.send_message(
                        user_id,
                        f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: —á–µ—Ä–µ–∑ 3 –¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {name}!\n"
                        f"üìÖ –î–∞—Ç–∞: {date}\n"
                        f"üéÇ –ò—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è: {age} –ª–µ—Ç"
                    )


def setup_scheduler(bot: Bot):
    global scheduler
    if scheduler is None:  # –ß—Ç–æ–±—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –¥—É–±–ª–∏–∫–∞—Ç—ã
        scheduler = AsyncIOScheduler()
        scheduler.add_job(
            send_reminders,
            'cron',
            hour=9,
            minute=0,
            args=(bot,)
        )
        scheduler.start()


@router.message(Command("start_reminders"))
async def start_reminders(message: Message, bot: Bot):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π"""
    setup_scheduler(bot)
    await message.answer("üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã! –í—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞ 3 –¥–Ω—è –¥–æ –î–†.")

@router.message(Command("stop_reminders"))
async def stop_reminders(message: Message):
    disable_reminders(message.from_user.id)
    await message.answer(
        "üîï –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã\n"
        "–ß—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –≤–∫–ª—é—á–∏—Ç—å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start_reminders"
    )
